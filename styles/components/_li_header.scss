$properties:(
    max-539:(
        padding-left: 2rem,
        cursor: pointer
    ),
    min_540:(
        height: 3rem,
        background-color: $lemon_green,
    ),
    ori-landscape:(
        width: 5rem,
        height: 2rem
    ),
    min-915:(
        width: 9rem,
        height: 2rem
    )
);

$a-properties:(
    normal:(
        font-family: $title-font,
        text-align: center,
        font-size: 1rem,
        color: $black,
        width: 100%,
        height: 100%,
        display: flex,
        justify-content: center,
        align-items: center
        ),
    max-539:(
        font-weight: 600,
        hover:(
            color: red,
            display: flex,
            align-items: center,
            before:(
                content:' ',
                position: absolute,
                display: block,
                left: 0.5rem,
                width: 1rem,
                height: 1rem,
                background-image: url(../images/logos/consola.png),
                background-size: cover,
                )
            )
        ),
    ori-portrait:(
        min-540:(
            width: 4rem
            ),
        min-768:(
            width: 6rem
            )
        ),
    ori-landscape:(
        font-family: $body-font,
        font-size: $font-medium,
        hover:(
            background-color: $dark_blue
            )
        )
);

%li_header{
    @for $i from 1 through length(map-keys($properties)){
        $proper: nth(map-keys($properties), $i);
        @if str-slice($proper, 0, 3) == 'max'{
            @include max-weight(str-slice($proper, 5, str-length($proper))){
                @each $property, $value in map-get($properties, $proper){
                    #{$property}: $value;
                }
            }
        }
        @if str-slice($proper, 0, 3) == 'ori'{
            @include orientation(str-slice($proper, 5, str-length($proper))){
                @each $property, $value in map-get($properties, $proper){
                    #{$property}: $value;
                }
            }
        }
        @if str-slice($proper, 0, 3) == 'min'{
            @include min-weight(str-slice($proper, 5, str-length($proper))){
                @each $property, $value in map-get($properties, $proper){
                    #{$property}: $value;
                }
            }
        }
    }
    @include min-weight(540){
        @include shadowBox();
    }

    a{
        @each $property, $values in $a-properties{
            $cate: str-slice($property, 0, 3);
            @if  $cate != 'max' and $cate != 'min' and $cate != 'ori'{
                @include runingMap($values)
            }@else if $cate == 'max'{
                @include max-weight(str-slice($property, 5, str-length($property))){
                    @include runingMap($values)
                }
            }@else if $cate == 'min'{
                @include min-weight(str-slice($property, 5, str-length($property))){
                    @include runingMap($values)
                }
            }@else if $cate == 'ori'{
                @include orientation(str-slice($property, 5, str-length($property))){
                    @include runingMap($values)
                }
            }
        }
    }
}